
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateShadowNodeH.js
 */

#pragma once

#include <react/renderer/components/rngesturehandler_codegen/EventEmitters.h>
#include <react/renderer/components/rngesturehandler_codegen/Props.h>
#include <react/renderer/components/view/ConcreteViewShadowNode.h>
#include <react/renderer/core/LayoutContext.h>
#include <jsi/jsi.h>

#include "RNGestureHandlerDetectorState.h"

namespace facebook::react {

JSI_EXPORT extern const char RNGestureHandlerDetectorComponentName[];

/*
 * `ShadowNode` for <RNGestureHandlerDetector> component.
 */
class RNGestureHandlerDetectorShadowNode final : public ConcreteViewShadowNode<
    RNGestureHandlerDetectorComponentName,
    RNGestureHandlerDetectorProps,
    RNGestureHandlerDetectorEventEmitter,
    RNGestureHandlerDetectorState> {
public:
  RNGestureHandlerDetectorShadowNode(
     const ShadowNodeFragment& fragment,
     const ShadowNodeFamily::Shared& family,
     ShadowNodeTraits traits)
     : ConcreteViewShadowNode(fragment, family, traits) {
    initialize();
  }

  RNGestureHandlerDetectorShadowNode(
      const ShadowNode& sourceShadowNode,
      const ShadowNodeFragment& fragment)
      : ConcreteViewShadowNode(sourceShadowNode, fragment) {
    initialize();
  }

  void initialize() {
    // Disable forcing view flattening
    ShadowNode::traits_.unset(ShadowNodeTraits::ForceFlattenView);
  }
      
  void layout(LayoutContext layoutContext) override {
    YogaLayoutableShadowNode::layout(layoutContext);
    // TODO: consider allowing more than one child and doing bounding box
    react_native_assert(getChildren().size() == 1);

    auto child = std::static_pointer_cast<const YogaLayoutableShadowNode>(getChildren()[0]);
    auto mutableChild = std::const_pointer_cast<YogaLayoutableShadowNode>(child);

    // TODO: figure out the correct way to setup metrics between detector and the child
    auto metrics = child->getLayoutMetrics();
    metrics.frame = child->getLayoutMetrics().frame;
    setLayoutMetrics(metrics);
    
    auto childmetrics = child->getLayoutMetrics();
    childmetrics.frame.origin = Point{};
    mutableChild->setLayoutMetrics(childmetrics);
  }
};

} // namespace facebook::react
