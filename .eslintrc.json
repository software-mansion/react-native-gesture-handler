{
  "root": true,
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "satya164"
  ],
  "settings": {
    "react": { "version": "19" },
    "import/resolver": {
      "babel-module": {}
    }
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": ["./tsconfig.json"]
  },
  "env": { "browser": true, "node": true, "jest/globals": true },
  "plugins": ["react", "jest"],
  "ignorePatterns": [
    "packages/react-native-gesture-handler/lib/**/*",
    "**/*.config.js",
    "scripts/*.js"
  ],
  "rules": {
    // removed in new jest-eslint-plugin, referenced in satya config
    "jest/no-truthy-falsy": "off",
    "jest/valid-describe": "off",

    "jest/expect-expect": [
      "warn",
      { "assertFunctionNames": ["expect*", "assert*"] }
    ],
    "jest/no-conditional-expect": "warn",

    // temporary, remove after we type internals better
    "@typescript-eslint/restrict-template-expressions": "warn",
    "@typescript-eslint/no-unsafe-member-access": "warn",
    "@typescript-eslint/no-unsafe-call": "warn",
    "@typescript-eslint/no-unsafe-assignment": "warn",
    "@typescript-eslint/no-unsafe-argument": "warn",
    "@typescript-eslint/no-unsafe-return": "warn",
    "@typescript-eslint/no-non-null-assertion": "warn",
    "@typescript-eslint/ban-types": "warn",

    // common
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "import/named": "off",
    "react/sort-comp": "off",
    "react/no-unused-prop-types": "warn",
    "react-hooks/exhaustive-deps": "warn",
    "@typescript-eslint/no-floating-promises": "warn",
    "@eslint-react/no-missing-component-display-name": "warn",
    "@eslint-react/no-nested-components": "warn",
    "@eslint-react/no-nested-component-definitions": "warn",
    "prefer-const": [
      "error",
      {
        "destructuring": "all"
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      { "argsIgnorePattern": "^_" }
    ],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-redundant-type-constituents": "warn",
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/no-misused-promises": "warn",
    "@eslint-react/no-array-index-key": "warn",
    "@eslint-react/hooks-extra/no-direct-set-state-in-use-effect": "warn",
    "@eslint-react/hooks-extra/prefer-use-state-lazy-initialization": "warn",
    "no-redeclare": "off",
    "@typescript-eslint/no-redeclare": "error",
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": "error",
    "@typescript-eslint/ban-ts-comment": [
      "error",
      {
        "ts-ignore": "allow-with-description",
        "ts-expect-error": "allow-with-description"
      }
    ],
    "curly": "error",
    "spaced-comment": "error",
    "no-alert": "warn"
  }
}
